[{"/app/src/index.js":"1","/app/src/app/App.js":"2","/app/src/app/Theme.js":"3","/app/src/app/AppRoutes.js":"4","/app/src/services/DataService.js":"5","/app/src/common/Header/index.js":"6","/app/src/common/Footer/index.js":"7","/app/src/common/Content/index.js":"8","/app/src/services/Common.js":"9","/app/src/components/Error/404.js":"10","/app/src/components/Home/index.js":"11","/app/src/common/Footer/styles.js":"12","/app/src/common/Header/styles.js":"13","/app/src/common/Content/styles.js":"14","/app/src/components/Home/styles.js":"15"},{"size":236,"mtime":1634977378850,"results":"16","hashOfConfig":"17"},{"size":1009,"mtime":1634977378829,"results":"18","hashOfConfig":"17"},{"size":1741,"mtime":1634977378831,"results":"19","hashOfConfig":"17"},{"size":536,"mtime":1634977378829,"results":"20","hashOfConfig":"17"},{"size":344,"mtime":1634977378854,"results":"21","hashOfConfig":"17"},{"size":1340,"mtime":1634977378839,"results":"22","hashOfConfig":"17"},{"size":570,"mtime":1634977378835,"results":"23","hashOfConfig":"17"},{"size":365,"mtime":1634977378833,"results":"24","hashOfConfig":"17"},{"size":201,"mtime":1634977378852,"results":"25","hashOfConfig":"17"},{"size":159,"mtime":1634977378843,"results":"26","hashOfConfig":"17"},{"size":4698,"mtime":1634977378846,"results":"27","hashOfConfig":"17"},{"size":258,"mtime":1634977378837,"results":"28","hashOfConfig":"17"},{"size":2063,"mtime":1634977378841,"results":"29","hashOfConfig":"17"},{"size":149,"mtime":1634977378834,"results":"30","hashOfConfig":"17"},{"size":970,"mtime":1634977378847,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1nf64nw",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/app/src/index.js",[],["67","68"],"/app/src/app/App.js",[],"/app/src/app/Theme.js",[],"/app/src/app/AppRoutes.js",["69"],"import React from \"react\";\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Home from \"../components/Home\";\r\nimport Error404 from '../components/Error/404';\r\n\r\nconst AppRouter = (props) => {\r\n\r\n  console.log(\"================================== AppRouter ======================================\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route component={Error404} />\r\n      </Switch>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AppRouter;","/app/src/services/DataService.js",[],"/app/src/common/Header/index.js",[],"/app/src/common/Footer/index.js",["70"],"import React, { useEffect } from 'react';\r\nimport { withStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport styles from './styles';\r\n\r\nconst Footer = (props) => {\r\n    const { classes } = props;\r\n\r\n    console.log(\"================================== Footer ======================================\");\r\n\r\n    // Component States\r\n\r\n    // Setup Component\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Footer);","/app/src/common/Content/index.js",[],"/app/src/services/Common.js",[],"/app/src/components/Error/404.js",[],"/app/src/components/Home/index.js",["71","72","73","74","75","76"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { withStyles } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nimport DataService from \"../../services/DataService\";\r\nimport { BASE_API_URL } from \"../../services/Common\";\r\nimport styles from './styles';\r\n\r\n\r\nconst Home = (props) => {\r\n    const { classes } = props;\r\n\r\n    console.log(\"================================== Home ======================================\");\r\n\r\n\r\n    // Component States\r\n    const [text, setText] = useState(\"\");\r\n    const [outputs, setOutputs] = useState([]);\r\n\r\n    // Setup Component\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    // Handlers\r\n    const handleOnImageClick = () => {\r\n        console.log(text)\r\n        DataService.Text2Image({ \"text\": text })\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                var ops = [...outputs];\r\n                setOutputs([]);\r\n                //ops.push(response.data);\r\n                ops.splice(0, 0, response.data);\r\n                setOutputs(ops);\r\n            })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <main className={classes.main}>\r\n                <Container maxWidth={false} className={classes.container}>\r\n                    <Grid container spacing={8}>\r\n                        <Grid item md={5}>\r\n                            <br />\r\n                            <Typography>\r\n                                Enter some text and click the Image button\r\n                            </Typography>\r\n                            <br />\r\n                            <TextField\r\n\r\n                                label=\"Text for Image Generation\"\r\n                                multiline\r\n                                maxRows={4}\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                value={text}\r\n                                onChange={(event) => setText(event.target.value)}\r\n                            />\r\n                            <br />\r\n                            <br />\r\n                            <br />\r\n                            <Icon className={classes.stopRecording} onClick={() => handleOnImageClick()}>image</Icon>\r\n                        </Grid>\r\n                        <Grid item md={7}>\r\n                            <TableContainer component={Paper}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Text</TableCell>\r\n                                            <TableCell>Image</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {outputs && outputs.map((item, idx) =>\r\n                                            <TableRow key={idx}>\r\n\r\n                                                <TableCell>{item.text}</TableCell>\r\n                                                <TableCell>\r\n                                                    <img src={BASE_API_URL + \"/get_image?path=\" + item.image_path}></img>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        )}\r\n\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            {/* {outputs && outputs.map((item, idx) =>\r\n                                \r\n                            )} */}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Home);","/app/src/common/Footer/styles.js",["77","78"],"import { pink, red } from \"@material-ui/core/colors\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        marginTop: \"30px\",\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    main: {\r\n       \r\n    },\r\n});\r\n\r\nexport default styles;","/app/src/common/Header/styles.js",[],"/app/src/common/Content/styles.js",[],"/app/src/components/Home/styles.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":2,"column":25,"nodeType":"85","messageId":"86","endLine":2,"endColumn":33},{"ruleId":"83","severity":1,"message":"87","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":18},{"ruleId":"83","severity":1,"message":"88","line":1,"column":28,"nodeType":"85","messageId":"86","endLine":1,"endColumn":34},{"ruleId":"83","severity":1,"message":"89","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":12},{"ruleId":"83","severity":1,"message":"90","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":19},{"ruleId":"83","severity":1,"message":"91","line":8,"column":8,"nodeType":"85","messageId":"86","endLine":8,"endColumn":19},{"ruleId":"83","severity":1,"message":"92","line":9,"column":8,"nodeType":"85","messageId":"86","endLine":9,"endColumn":14},{"ruleId":"93","severity":1,"message":"94","line":98,"column":53,"nodeType":"95","endLine":98,"endColumn":116},{"ruleId":"83","severity":1,"message":"96","line":1,"column":10,"nodeType":"85","messageId":"86","endLine":1,"endColumn":14},{"ruleId":"83","severity":1,"message":"97","line":1,"column":16,"nodeType":"85","messageId":"86","endLine":1,"endColumn":19},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'useRef' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'pink' is defined but never used.","'red' is defined but never used.","no-global-assign","no-unsafe-negation"]